syntax = "proto3";
package proto;
option go_package = "./proto";

import "google/protobuf/timestamp.proto";

message Property {
  // Property Name
  // A textual label, within a namespace, that identifies a specific attribute,
  // characteristic, or quality of the property's containing object.
  string Name = 1;

  // Property Value
  // Indicates the value of the attribute, characteristic, or quality.
  string Value = 2;

  // Property Universally Unique Identifier
  // A unique identifier for a property.
  optional string Uuid = 3;

  // Property Namespace
  // A namespace qualifying the property's name. This allows different
  // organizations to associate distinct semantics with the same name.
  optional string Ns = 4;

  // Property Class
  // A textual label that provides a sub-type or characterization of the
  // property's name.
  optional string Class = 5;

  // Property Group
  // An identifier for relating distinct sets of properties.
  optional string Group = 6;

  // Remarks
  // Additional explanatory notes for the property.
  optional string Remarks = 7;
}

message Link {
  // Hypertext Reference
  // A resolvable URL reference to a resource.
  string Href = 1;

  // Link Relation Type
  // Describes the type of relationship provided by the link's hypertext
  // reference. This can be an indicator of the link's purpose.
  optional string Rel = 2;

  // Media Type
  // A label that indicates the nature of a resource, as a data serialization or
  // format.
  optional string MediaType = 3;

  // Resource Fragment
  // In case where the href points to a back-matter/resource, this value will
  // indicate the URI fragment to append to any rlink associated with the
  // resource. This value MUST be URI encoded.
  optional string ResourceFragment = 4;

  // Link Text
  // A textual label to associate with the link, which may be used for
  // presentation in a tool.
  optional string Text = 5;
}

message OriginActor {
  string UUID = 1;
  string Title = 2;
  string RoleId = 3;
  string Type = 4;
  repeated Link Links = 5;
  repeated Property Props = 6;
}

message Origin {
  repeated OriginActor Actors = 1;
}

message Step {
  optional string UUID = 1;
  string Title = 2;
  string Description = 3;
  optional string Remarks = 4;
  repeated Link Links = 5;
  repeated Property Props = 6;
}

message Activity {
  optional string UUID = 1;
  string Title = 2;
  string Description = 3;
  optional string Remarks = 4;
  repeated Step Steps = 5;
  repeated Link Links = 6;
  repeated Property Props = 7;
}

enum EvidenceStatusState {
  EVIDENCE_STATUS_STATE_SATISFIED = 0;
  EVIDENCE_STATUS_STATE_NOT_SATISFIED = 1;
}

message EvidenceStatus {
  string Reason = 1;
  string Remarks = 2;
  EvidenceStatusState State = 3;
}

message PortRange {
  int32 End = 1;
  int32 Start = 2;
  string Transport = 3;
}

message Protocol {
  string UUID = 1;
  string Name = 2;
  string Title = 3;
  repeated PortRange PortRanges = 4;
}

message Component {
  string Identifier = 1;
  string Type = 2;
  string Title = 3;
  string Description = 4;
  string Remarks = 5;
  string Purpose = 6;
  repeated Protocol Protocols = 7;
  repeated Link Links = 8;
  repeated Property Props = 9;
}

message InventoryItemImplementedComponent {
  string Identifier = 1;
}

message InventoryItem {
  string Identifier = 1;
  string Type = 2;
  string Title = 3;
  string Description = 4;
  string Remarks = 5;
  repeated Link Links = 6;
  repeated Property Props = 7;
  repeated InventoryItemImplementedComponent ImplementedComponents = 8;
}

enum SubjectType {
  SUBJECT_TYPE_INVENTORY_ITEM = 0;
  SUBJECT_TYPE_COMPONENT = 1;
}

message Subject {
  string Identifier = 1;
  SubjectType Type = 2;
  string Description = 3;
  string Remarks = 4;
  repeated Link Links = 5;
  repeated Property Props = 6;
}

message Evidence {
  string UUID = 1;
  string Title = 2;
  optional string Description = 3;
  optional string Remarks = 4;

  // Assigning labels to Evidence makes it searchable and easily usable in the UI
  map<string, string> Labels = 5;

  // When did we start collecting the evidence, and when did the process end, and how long is it valid for ?
  google.protobuf.Timestamp Start = 6;
  google.protobuf.Timestamp End = 7;
  optional google.protobuf.Timestamp  Expires = 8;

  repeated Link Links = 9;
  repeated Property Props = 10;

  // Who or What is generating this evidence
  repeated Origin Origins = 11;
  // What steps did we take to create this evidence
  repeated Activity Activities = 12;
  // Which inventory items were discovered in the evaluation process ?
  repeated InventoryItem InventoryItems = 13;
  // Which components of the subject are being observed. A tool, user, policy etc.
  repeated Component Components = 14;
  // Who or What are we providing evidence for. What's under test.
  repeated Subject Subjects = 15;
  // Did we satisfy what was being tested for, or did we fail ?
  EvidenceStatus Status = 16;
}
